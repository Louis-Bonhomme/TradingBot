# -*- coding: utf-8 -*-
def telegram_bot_sendtext(bot_message):
    
    bot_token = '1646234714:AAGdw4bixfLCz_WWF2Lz6fm2JX8VUkC8dYg'
    bot_chatID = '1295095047'
    send_text = 'https://api.telegram.org/bot' + bot_token + '/sendMessage?chat_id=' + bot_chatID + '&parse_mode=Markdown&text=' + bot_message

    response = requests.get(send_text)

    return response.json()
    

import requests 
import json
import pandas as pd
import time

def binance_matic(): 
    binanceTick1 = requests.get("https://api.binance.com/api/v3/ticker/price?symbol=MATICUSDT")
    return binanceTick1.json()['price']

def binance_ghst(): 
    binanceTick1 = requests.get("https://api.binance.com/api/v3/ticker/price?symbol=GHSTBUSD")
    return binanceTick1.json()['price']


url = 'https://api.thegraph.com/subgraphs/name/sameepsi/quickswap'

GHST_Query = """{
 pair(id: "0x096c5ccb33cfc5732bcd1f3195c13dbefc4c82f4"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


maUSDT_Query = """{
 pair(id: "0x2eea2d478787dfcaa4aa5398622556b9d775f194"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


maTUSD_Query = """{
 pair(id: "0xc8f51057e1aea189f18011a278432ef2dc6d204a"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


maDAI_Query = """{
 pair(id: "0x6fc2a79b1f0c31ec4dc4343157cbd8becb0f6aaf"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


FRAX_Query = """{
 pair(id: "0x4756ff6a714ab0a2c69a566e548b59c72eb26725"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


MATIC_Query = """{
 pair(id: "0x6e7a5fafcec6bb1e78bae2a1f0b612012bf14827"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""





rdUSD_Query = """{
 pair(id: "0x501082e1926a721cdcb1254edebaa0717d2a0d91"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


dUSD_Query = """{
 pair(id: "0x3fd96747042ea84e911b6af7a61226ead71ebe82"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""

maUSDC_Query = """{
 pair(id: "0x7295304b10740ba8e037826787d3e9386fd99925"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


USDT_Query = """{
 pair(id: "0x2cf7252e74036d1da831d11089d326296e64a728"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""



DAI_Query = """{
 pair(id: "0xf04adbf75cdfc5ed26eea4bbbb991db002036bdd"){
     token0 {
       symbol
       name
     }
     token1 {
       symbol
       name
     }
     reserve0
     reserve1
     reserveUSD
     token0Price
     token1Price
 }
}

"""


t_query = 2

usd_trigger_up = 1.05
usd_trigger_low = 0.95

while(1) :

    r = requests.post(url, json={'query': GHST_Query})
    json_data = json.loads(r.text)
    print("prix du GHST: " + json_data['data']['pair']['token0Price'])
    prix_ghst = json_data['data']['pair']['token0Price']

    if (float(prix_ghst) < 0.93*float(binance_ghst()) or float(prix_ghst) > 1.07*float(binance_ghst())) :
        telegram_bot_sendtext('fils de pute le prix du GHST est de ' + str(prix_ghst))
    
    time.sleep(t_query)
    
    
    r = requests.post(url, json={'query': maUSDC_Query})
    json_data = json.loads(r.text)
    print("prix du maUSDC: " + json_data['data']['pair']['token0Price'])
    prix_maUSDC = json_data['data']['pair']['token0Price']

    if (float(prix_maUSDC) < 0.99 or float(prix_maUSDC) > 1.065 ) :
        telegram_bot_sendtext('fils de pute le prix du maUSDC est de ' + str(prix_maUSDC))
    
    time.sleep(t_query)
    
    
    r = requests.post(url, json={'query': maDAI_Query})
    json_data = json.loads(r.text)
    print("prix du maDAI: " + json_data['data']['pair']['token0Price'])
    prix_maDAI = json_data['data']['pair']['token0Price']

    if (float(prix_maDAI) < usd_trigger_low or float(prix_maDAI) > usd_trigger_up ) :
        telegram_bot_sendtext('fils de pute le prix du maDAI est de ' + str(prix_maDAI))
    
    time.sleep(t_query)
    
    
    r = requests.post(url, json={'query': maUSDT_Query})
    json_data = json.loads(r.text)
    print("prix du maUSDT: " + json_data['data']['pair']['token0Price'])
    prix_maUSDT = json_data['data']['pair']['token0Price']

    if (float(prix_maUSDT) < usd_trigger_low or float(prix_maUSDT) > usd_trigger_up ) :
        telegram_bot_sendtext('fils de pute le prix du maUSDT est de ' + str(prix_maUSDT))
    
    time.sleep(t_query)
    
    
    r = requests.post(url, json={'query': maTUSD_Query})
    json_data = json.loads(r.text)
    print("prix du maTUSD: " + json_data['data']['pair']['token0Price'])
    prix_maTUSD = json_data['data']['pair']['token0Price']

    if (float(prix_maTUSD) < usd_trigger_low or float(prix_maTUSD) > usd_trigger_up ) :
        telegram_bot_sendtext('fils de pute le prix du maTUSD est de ' + str(prix_maTUSD))
    
    time.sleep(t_query)
    

    
    
    r = requests.post(url, json={'query': USDT_Query})
    json_data = json.loads(r.text)
    print("prix du USDT: " + json_data['data']['pair']['token1Price'])
    prix_USDT = json_data['data']['pair']['token0Price']

    if (float(prix_USDT) < usd_trigger_low or float(prix_USDT) > usd_trigger_up ) :
        telegram_bot_sendtext('fils de pute le prix du USDT est de ' + str(prix_USDT))
    
    time.sleep(t_query)
    
    
    r = requests.post(url, json={'query': DAI_Query})
    json_data = json.loads(r.text)
    print("prix du DAI: " + json_data['data']['pair']['token1Price'])
    prix_DAI = json_data['data']['pair']['token0Price']

    if (float(prix_DAI) < usd_trigger_low or float(prix_DAI) > usd_trigger_up ) :
        telegram_bot_sendtext('fils de pute le prix du DAI est de ' + str(prix_DAI))
    
    time.sleep(t_query)
    
    
    r = requests.post(url, json={'query': FRAX_Query})
    json_data = json.loads(r.text)
    print("prix du FRAX: " + json_data['data']['pair']['token1Price'])
    prix_FRAX = json_data['data']['pair']['token1Price']

   # if (float(prix_FRAX) < usd_trigger_low or float(prix_FRAX) > usd_trigger_up ) :
   #     telegram_bot_sendtext('fils de pute le prix du FRAX est de ' + str(prix_FRAX))
    
    
    time.sleep(t_query)


    

    r = requests.post(url, json={'query': MATIC_Query})
    json_data = json.loads(r.text)
    print("prix du MATIC: " + json_data['data']['pair']['token1Price'])
    prix_MATIC = json_data['data']['pair']['token1Price']

    if (float(prix_MATIC) < 0.96*float(binance_matic()) or float(prix_MATIC) > 1.04*float(binance_matic()) ) :
        telegram_bot_sendtext('fils de pute le prix du MATIC est DIFFERENT SUR BINANCE ET QUICKSWAP ' + str(prix_MATIC))
    
#    
#    time.sleep(10)
#    r = requests.post(url, json={'query': rdUSD_Query})
#    json_data = json.loads(r.text)
#    print("prix du rdUSD: " + json_data['data']['pair']['token0Price'])
#    prix_rdUSD = json_data['data']['pair']['token0Price']
#
#    if (float(prix_rdUSD) < 1 or float(prix_rdUSD) > 3) :
#        telegram_bot_sendtext('fils de pute le prix du rdUSD est de ' + str(prix_rdUSD))
#    
#    time.sleep(10)
#    
#    
#    r = requests.post(url, json={'query': dUSD_Query})
#    json_data = json.loads(r.text)
#    print("prix du dUSD: " + json_data['data']['pair']['token0Price'])
#    prix_dUSD = json_data['data']['pair']['token0Price']
#
#    if (float(prix_dUSD) < 0.805 or float(prix_dUSD) > 1) :
#        telegram_bot_sendtext('fils de pute le prix du dUSD est de ' + str(prix_dUSD))
#    
#    time.sleep(10)
x
